import tkinter as tk
from util.ExploitSearch import ExploitSearcher

from tkinter import ttk


class ExploitView:

    cve_var = None
    matches_var = None
    find_button = None
    exploit_data = None
    description_var = None

    def get_view(self, parent_frame):

        self.cve_var = tk.StringVar()
        self.matches_var = tk.StringVar()
        self.description_var = tk.StringVar()

        frame = ttk.Frame(parent_frame)
        frame.grid(row=0, column=0, sticky='nsew')
        frame.grid_columnconfigure(0, weight=1)

        # header label
        header_label = ttk.Label(frame, text='Exploit Search')
        header_label.grid(row=0, column=0, pady=(8, 8))

        # cve label
        cve_selected_frame = ttk.Frame(frame)
        cve_selected_frame.grid(row=1, column=0, sticky='nsew')
        cve_selected_frame.grid_columnconfigure(1, weight=1)

        cve_label = ttk.Label(cve_selected_frame, text='Selected CVE: ')
        cve_label.grid(row=0, column=0, padx=(16, 0))

        #self.cve_var.set(DataShare.get_selected_cve())
        cve_selected = ttk.Label(cve_selected_frame, textvariable=self.cve_var)
        cve_selected.grid(row=0, column=1, padx=(16, 0))

        matches_label = ttk.Label(cve_selected_frame, text='Matches Found: ')
        matches_label.grid(row=0, column=3, padx=(16, 0))
        matches_entry = ttk.Label(cve_selected_frame, textvariable=self.matches_var)
        matches_entry.grid(row=0, column=4, padx=(16, 0))



        # find button
        button_frame = ttk.Frame(frame)
        button_frame.grid(row=2, column=0, pady=(8, 8))

        self.find_button = ttk.Button(button_frame, text='Find Exploit', command=self.on_search)
        self.find_button.grid(row=0, column=0, pady=(8, 8))

        # description frame
        desc_frame = tk.Frame(frame)
        desc_frame.grid(row=3, column=0, sticky='nsew')

        # description label
        desc_label = tk.Label(desc_frame, text='Description: ')
        desc_label.grid(row=0, column=0, sticky='nsew')
        desc_text = tk.Text(desc_frame, wrap='word', width=65, height=17)
        desc_text.grid(row=1, column=0, sticky='nsew')
        desc_text.insert('insert', 'Where is my textvariable. Sad day.')
        return frame

    def update_cve(self, cve):
        print('FROM EXPLOIT VIEW: Updating cve label')
        self.cve_var.set(cve)
        # self.on_update_cve(cve)

    # def update_es(self, es):
    #     self.exploit_data = es
    #     res = es.get_results()
    #     self.matches_var.set(res['total'])
    #     es.print_all()

    def on_search(self):
        if self.cve_var.get():
            es = ExploitSearcher(self.cve_var.get())
            # when clicking in vuln tab this gets called very quickly and throws errors
            es.search()
            self.matches_var.set(es.get_results()['total'])
            print('Exploit buttons works')
            es.print_all()
            self.description_var.set(es.get_results()['matches'][0]['description'])

