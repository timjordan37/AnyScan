import tkinter as tk
from util.DataShare import DataShare


class ExploitView:

    cve_var = None
    find_button = None

    def get_view(self, parent_frame):

        self.cve_var = tk.StringVar()

        frame = tk.Frame(parent_frame)
        frame.grid(row=0, column=0, sticky='nsew')
        frame.grid_columnconfigure(0, weight=1)

        # header label
        header_label = tk.Label(frame, text='Exploit Search')
        header_label.grid(row=0, column=0, pady=(8, 8))

        # cve label
        cve_selected_frame = tk.Frame(frame)
        cve_selected_frame.grid(row=1, column=0, sticky='nsew')
        cve_selected_frame.grid_columnconfigure(1, weight=1)

        cve_label = tk.Label(cve_selected_frame, text='Selected CVE: ')
        cve_label.grid(row=0, column=0, padx=(16, 0))

        self.cve_var.set(DataShare.get_selected_cve())
        if not self.cve_var.get():
            cve_selected = tk.Label(cve_selected_frame, self.cve_var.get())
            cve_selected.grid(row=0, column=1, padx=(16, 0))

        # find button
        button_frame = tk.Frame(frame)
        button_frame.grid(row=2, column=0, pady=(8, 8))

        self.find_button = tk.Button(button_frame, text='Find Exploit', command=self.on_search)
        self.find_button.grid(row=0, column=0, pady=(8, 8))

        return frame

    def update_cve(self, cve):
        print('FROM EXPLOIT VIEW: Updating cve label')
        self.cve_var.set(cve)
        self.on_update_cve(cve)

    def update_es(self, es):
        print('From exploit view: ')
        es.print_all()

    def on_search(self):
        print('Exploit buttons works')
